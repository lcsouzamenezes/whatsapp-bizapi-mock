syntax = "proto3";
package whatsapp;
option go_package = "/model";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

message Contact {
    string wa_id = 1;

    message Profile {
        string name = 1;
    }
    Profile profile = 2;

    enum ContactStatus {
        unknown = 0;
        valid = 1;
        invalid = 2;
    }
    ContactStatus status = 3;
    string input = 4;
}

message Meta {
    string version = 1;

    enum APIStatus {
        unknown = 0;
        deprecated = 1;
        experimental = 2;
        stable = 3;
    }
    APIStatus api_status = 2;
}

message Id {
    string id = 1;
}

message TokenResponse {
    string token = 1;
    string expires_after = 2;
}

message MetaResponse  {
    Meta meta = 1;
}

message ContactResponse {
    Meta meta = 1;
    repeated Contact contacts = 2;
}

message LoginResponse {
    Meta meta = 1;
    repeated TokenResponse users = 2;
}

message IdResponse {
    repeated Id messages = 1;
    repeated Id media = 2;
}

message ErrorResponse {
    Meta meta = 1;
    repeated Error errors = 2;
}

message ChangePwdRequest {
    string new_password = 1 [(validate.rules).string.min_len = 8];
}

message BackupRequest {
    string password = 1 [(validate.rules).string.min_len = 8];
    string data = 2;
}

message BackupResponse {
    message SettingsData  {
        bytes data = 1;
    }
    SettingsData settings = 1;
}

message RestoreRequest {
    string password = 1;
    bytes data = 2;
}

message User {
    string username = 1 [(validate.rules).string.min_len = 5];
    string password = 2 [(validate.rules).string.min_len = 8];
}

message Context {
    string from = 1;
    string id = 2;
    repeated string mentions = 3;
    bool forwarded = 4;
    bool frequently_forwarded = 5;
}

message Status {
    string id = 1;  
    enum StatusEnum {
        unknown = 0;
        sent = 1;
        delivered = 2;
        read = 3;
    }
    StatusEnum status = 2;
    string recipient_id = 3;
    int64 timestamp = 4;
}

enum MessageType {
    unknown = 0;
    document = 1;
    image = 2;
    location = 3;
    system = 4;
    text = 5;
    video = 6;
    voice = 7;
    audio = 8;
    template = 9;
} 

message Provider {
    string name = 1;
}

message TextMessage {
    string body = 1;
}

message ImageMessage {
    string file = 1;
    string id = 2;
    string link = 3;
    string mime_type = 4;
    string sha256 = 5;
    string caption = 6;
    Provider provider = 8;
}

message AudioMessage {
    string file = 1;
    string id = 2;
    string link = 3;
    string mime_type = 4;
    string sha256 = 5;
    Provider provider = 6;
}

message VideoMessage {
    string file = 1;
    string id = 2;
    string link = 3;
    string mime_type = 4;
    string sha256 = 5;
    string caption = 6;
    Provider provider = 7;
}

message VoiceMessage {
    string file = 1;
    string id = 2;
    string link = 3;
    string mime_type = 4;
    string sha256 = 5;
}

message DocumentMessage {
    string file = 1;
    string id = 2;
    string link = 3;
    string mime_type = 4;
    string sha256 = 5;
    string caption = 6;
    string filename = 7;
    Provider provider = 8;
}

message MediaParameter {
    string id = 1;
    string filename = 2;
    string caption = 3;
}

message TemplateMessage {
    message Language {
        enum Policy {
            deterministic = 0;
        }
        enum Code {
            en = 0;
            de = 1;
        }
        Policy policy = 1;
        string code = 2;
    }
    message Component {
        enum ComponentType {
            header = 0;
            body = 1;
            footer = 2;
            button = 3;
        }
        enum SubComponentType {
            quick_reply = 0;
            url = 1;
        }
        message Parameters {
            /*enum ParametersType {
                text = 0;
                currency = 1;
                date_time = 2;
                image = 3;
                document = 4;
                video = 5;
            }*/
            message CurrencyParameter {
                string fallback_value = 1;
                string code = 2;
                uint32 amount_1000 = 3;
            }
            message DateTimeParameter {
                string fallback_value = 1;
                uint32 day_of_week = 2;
                uint32 day_of_month = 3;
                uint32 month = 4;
                uint32 hour = 5;
                uint32 minute = 6;
                uint64 timestamp = 7;
            }

            string type = 1;
            string text = 2;
            CurrencyParameter currency = 3;
            DateTimeParameter date_time = 4;
            MediaParameter image = 5;
            MediaParameter document = 6;
            MediaParameter video = 7;
            string payload = 8;
        }

        ComponentType type = 1;
        SubComponentType subtype = 2;
        uint32 index = 3;
        repeated Parameters parameters = 4;
    }

    string namespace = 1;
    string name = 2;
    Language language = 3;
    repeated Component components = 4;
}

message InteractiveMessage {
    enum InteractiveMessageType {
        list = 0;
        button = 1;
    }
    message HeaderParameter {
        string type = 1;
        string text = 2;
        MediaParameter image = 3;
        MediaParameter document = 4;
        MediaParameter video = 5;
    }
    message TextParameter {
        string type = 1;
        string text = 2;
    }
    message Section {
        message SectionRow {
            string id = 1;
            string title = 2;
            string desciption = 3;
        }

        string title = 1;
        repeated SectionRow rows = 2;
    }
    message ButtonsAction {
        message ButtonsActionReply {
            string id = 1;
            string title = 2;
        }

        string type = 1;
        ButtonsActionReply reply = 2;
    }

    message ActionWrapper {
        string button = 1; // only for list interactive message
        repeated ButtonsAction buttons = 2; // only for button interactive message
        repeated Section sections = 3; // only for list interactive message
    }

    InteractiveMessageType type = 1;
    HeaderParameter header = 2;
    TextParameter body = 3;
    TextParameter footer = 4;
    ActionWrapper action = 5;

}

message LocationMessage {
    string address = 1;
    int64 latitude = 2;
    int64 longitude = 3;
    string name = 4;
}

message SystemMessage {
    string body = 1;
}

message Error {
    int32 code = 1;
    string title = 2;
    string details = 3;
    string href = 4;
}

message StickerMessage {
    string id = 1;
    string link = 3;
    Provider provider = 8;
}

message MessageWrapper {
    repeated Message messages = 1;
}

message MessageMeta {
    string to = 1;
    MessageType type = 2;
}

message Message {
    string id = 1;
    string from = 2;
    string to = 3;
    Context context = 4;
    MessageType type = 5;
    int64 timestamp = 6;
    repeated Error errors = 7;
    TextMessage text = 8;
    ImageMessage image = 9;
    AudioMessage audio = 10;
    VideoMessage video = 11;
    VoiceMessage voice = 12;
    DocumentMessage document = 13;
    LocationMessage location = 14;
    SystemMessage system = 15;
    StickerMessage sticker = 16;
    TemplateMessage template = 17;
    InteractiveMessage interactive = 18;

    enum RecipientType {
        unknown = 0;
        individual = 1;
        group = 2;
    }

    RecipientType recipient_type = 19;
    bool preview_url = 20;
}

message RegistrationRequest  {
    string  cc  = 1;
    string  phone_number = 2;

    enum ContactMethod {
        unknown = 0;
        sms = 1;
        voice = 2;
    }
    ContactMethod  method = 3;

    string  cert = 4;
    string pin = 5;
}

message VerifyRequest {
    string code = 1;
}


message ApplicationSettings {
    int32 callback_backoff_delay_ms =  1;
    int32 max_callback_backoff_delay_ms = 2;
    bool  callback_persist =  3;

    message Media {
        repeated string auto_download = 1;
    }

    Media media = 4;

    message Webhooks {
        string url = 1;
        int32 max_concurrent_requests = 2;
    }
    Webhooks webhooks = 5;
    bool pass_through = 6;
    bool sent_status = 7;
    bool db_garbagecollector_enable = 8;
    bool notify_user_change_number = 9;
    bool show_security_notifications = 10;
}


message ProfileAbout {
    string text = 1;
}

message BusinessProfile {
    string address = 1;
    string description = 2;
    string email = 3;
    string vertical = 4;
    repeated string websites = 5;
}
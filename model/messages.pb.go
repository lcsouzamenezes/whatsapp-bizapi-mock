// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: messages.proto

package model

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TemplateMessage_Language_Policy int32

const (
	TemplateMessage_Language_deterministic TemplateMessage_Language_Policy = 0
)

// Enum value maps for TemplateMessage_Language_Policy.
var (
	TemplateMessage_Language_Policy_name = map[int32]string{
		0: "deterministic",
	}
	TemplateMessage_Language_Policy_value = map[string]int32{
		"deterministic": 0,
	}
)

func (x TemplateMessage_Language_Policy) Enum() *TemplateMessage_Language_Policy {
	p := new(TemplateMessage_Language_Policy)
	*p = x
	return p
}

func (x TemplateMessage_Language_Policy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TemplateMessage_Language_Policy) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (TemplateMessage_Language_Policy) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x TemplateMessage_Language_Policy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TemplateMessage_Language_Policy.Descriptor instead.
func (TemplateMessage_Language_Policy) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9, 0, 0}
}

type TemplateMessage_Language_Code int32

const (
	TemplateMessage_Language_en TemplateMessage_Language_Code = 0
	TemplateMessage_Language_de TemplateMessage_Language_Code = 1
)

// Enum value maps for TemplateMessage_Language_Code.
var (
	TemplateMessage_Language_Code_name = map[int32]string{
		0: "en",
		1: "de",
	}
	TemplateMessage_Language_Code_value = map[string]int32{
		"en": 0,
		"de": 1,
	}
)

func (x TemplateMessage_Language_Code) Enum() *TemplateMessage_Language_Code {
	p := new(TemplateMessage_Language_Code)
	*p = x
	return p
}

func (x TemplateMessage_Language_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TemplateMessage_Language_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[1].Descriptor()
}

func (TemplateMessage_Language_Code) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[1]
}

func (x TemplateMessage_Language_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TemplateMessage_Language_Code.Descriptor instead.
func (TemplateMessage_Language_Code) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9, 0, 1}
}

type TemplateMessage_Component_Parameters_Calender int32

const (
	TemplateMessage_Component_Parameters_GREGORIAN   TemplateMessage_Component_Parameters_Calender = 0
	TemplateMessage_Component_Parameters_SOLAR_HIJRI TemplateMessage_Component_Parameters_Calender = 1
)

// Enum value maps for TemplateMessage_Component_Parameters_Calender.
var (
	TemplateMessage_Component_Parameters_Calender_name = map[int32]string{
		0: "GREGORIAN",
		1: "SOLAR_HIJRI",
	}
	TemplateMessage_Component_Parameters_Calender_value = map[string]int32{
		"GREGORIAN":   0,
		"SOLAR_HIJRI": 1,
	}
)

func (x TemplateMessage_Component_Parameters_Calender) Enum() *TemplateMessage_Component_Parameters_Calender {
	p := new(TemplateMessage_Component_Parameters_Calender)
	*p = x
	return p
}

func (x TemplateMessage_Component_Parameters_Calender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TemplateMessage_Component_Parameters_Calender) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[2].Descriptor()
}

func (TemplateMessage_Component_Parameters_Calender) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[2]
}

func (x TemplateMessage_Component_Parameters_Calender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TemplateMessage_Component_Parameters_Calender.Descriptor instead.
func (TemplateMessage_Component_Parameters_Calender) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9, 1, 0, 0}
}

type Message_RecipientType int32

const (
	Message_unknown    Message_RecipientType = 0
	Message_individual Message_RecipientType = 1
	Message_group      Message_RecipientType = 2
)

// Enum value maps for Message_RecipientType.
var (
	Message_RecipientType_name = map[int32]string{
		0: "unknown",
		1: "individual",
		2: "group",
	}
	Message_RecipientType_value = map[string]int32{
		"unknown":    0,
		"individual": 1,
		"group":      2,
	}
)

func (x Message_RecipientType) Enum() *Message_RecipientType {
	p := new(Message_RecipientType)
	*p = x
	return p
}

func (x Message_RecipientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_RecipientType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[3].Descriptor()
}

func (Message_RecipientType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[3]
}

func (x Message_RecipientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_RecipientType.Descriptor instead.
func (Message_RecipientType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16, 0}
}

type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From                string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Id                  string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Mentions            []string `protobuf:"bytes,3,rep,name=mentions,proto3" json:"mentions,omitempty"`
	Forwarded           bool     `protobuf:"varint,4,opt,name=forwarded,proto3" json:"forwarded,omitempty"`
	FrequentlyForwarded bool     `protobuf:"varint,5,opt,name=frequently_forwarded,json=frequentlyForwarded,proto3" json:"frequently_forwarded,omitempty"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Context) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Context) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Context) GetMentions() []string {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (x *Context) GetForwarded() bool {
	if x != nil {
		return x.Forwarded
	}
	return false
}

func (x *Context) GetFrequentlyForwarded() bool {
	if x != nil {
		return x.FrequentlyForwarded
	}
	return false
}

type Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Provider) Reset() {
	*x = Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *Provider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TextMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *TextMessage) Reset() {
	*x = TextMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessage) ProtoMessage() {}

func (x *TextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessage.ProtoReflect.Descriptor instead.
func (*TextMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *TextMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type ImageMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File     string    `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Id       string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Link     string    `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	MimeType string    `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Sha256   string    `protobuf:"bytes,5,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Caption  string    `protobuf:"bytes,6,opt,name=caption,proto3" json:"caption,omitempty"`
	Provider *Provider `protobuf:"bytes,8,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *ImageMessage) Reset() {
	*x = ImageMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMessage) ProtoMessage() {}

func (x *ImageMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMessage.ProtoReflect.Descriptor instead.
func (*ImageMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *ImageMessage) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *ImageMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ImageMessage) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ImageMessage) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ImageMessage) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *ImageMessage) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *ImageMessage) GetProvider() *Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type AudioMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File     string    `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Id       string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Link     string    `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	MimeType string    `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Sha256   string    `protobuf:"bytes,5,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Provider *Provider `protobuf:"bytes,6,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *AudioMessage) Reset() {
	*x = AudioMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioMessage) ProtoMessage() {}

func (x *AudioMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioMessage.ProtoReflect.Descriptor instead.
func (*AudioMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *AudioMessage) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *AudioMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AudioMessage) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *AudioMessage) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *AudioMessage) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *AudioMessage) GetProvider() *Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type VideoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File     string    `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Id       string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Link     string    `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	MimeType string    `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Sha256   string    `protobuf:"bytes,5,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Caption  string    `protobuf:"bytes,6,opt,name=caption,proto3" json:"caption,omitempty"`
	Provider *Provider `protobuf:"bytes,7,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *VideoMessage) Reset() {
	*x = VideoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMessage) ProtoMessage() {}

func (x *VideoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMessage.ProtoReflect.Descriptor instead.
func (*VideoMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *VideoMessage) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *VideoMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VideoMessage) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *VideoMessage) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *VideoMessage) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *VideoMessage) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *VideoMessage) GetProvider() *Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type VoiceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File     string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Link     string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	MimeType string `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Sha256   string `protobuf:"bytes,5,opt,name=sha256,proto3" json:"sha256,omitempty"`
}

func (x *VoiceMessage) Reset() {
	*x = VoiceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceMessage) ProtoMessage() {}

func (x *VoiceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceMessage.ProtoReflect.Descriptor instead.
func (*VoiceMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *VoiceMessage) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *VoiceMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VoiceMessage) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *VoiceMessage) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *VoiceMessage) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

type DocumentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File     string    `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Id       string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Link     string    `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	MimeType string    `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Sha256   string    `protobuf:"bytes,5,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Caption  string    `protobuf:"bytes,6,opt,name=caption,proto3" json:"caption,omitempty"`
	Filename string    `protobuf:"bytes,7,opt,name=filename,proto3" json:"filename,omitempty"`
	Provider *Provider `protobuf:"bytes,8,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *DocumentMessage) Reset() {
	*x = DocumentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentMessage) ProtoMessage() {}

func (x *DocumentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentMessage.ProtoReflect.Descriptor instead.
func (*DocumentMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *DocumentMessage) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *DocumentMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DocumentMessage) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *DocumentMessage) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *DocumentMessage) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *DocumentMessage) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *DocumentMessage) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DocumentMessage) GetProvider() *Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type MediaParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Caption  string `protobuf:"bytes,3,opt,name=caption,proto3" json:"caption,omitempty"`
}

func (x *MediaParameter) Reset() {
	*x = MediaParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaParameter) ProtoMessage() {}

func (x *MediaParameter) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaParameter.ProtoReflect.Descriptor instead.
func (*MediaParameter) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *MediaParameter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MediaParameter) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MediaParameter) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

type TemplateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string                       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name       string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Language   *TemplateMessage_Language    `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Components []*TemplateMessage_Component `protobuf:"bytes,4,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *TemplateMessage) Reset() {
	*x = TemplateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateMessage) ProtoMessage() {}

func (x *TemplateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateMessage.ProtoReflect.Descriptor instead.
func (*TemplateMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *TemplateMessage) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TemplateMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TemplateMessage) GetLanguage() *TemplateMessage_Language {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *TemplateMessage) GetComponents() []*TemplateMessage_Component {
	if x != nil {
		return x.Components
	}
	return nil
}

type InteractiveMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string                              `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Header *InteractiveMessage_HeaderParameter `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Body   *InteractiveMessage_TextParameter   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Footer *InteractiveMessage_TextParameter   `protobuf:"bytes,4,opt,name=footer,proto3" json:"footer,omitempty"`
	Action *InteractiveMessage_ActionWrapper   `protobuf:"bytes,5,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *InteractiveMessage) Reset() {
	*x = InteractiveMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractiveMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractiveMessage) ProtoMessage() {}

func (x *InteractiveMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractiveMessage.ProtoReflect.Descriptor instead.
func (*InteractiveMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *InteractiveMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InteractiveMessage) GetHeader() *InteractiveMessage_HeaderParameter {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *InteractiveMessage) GetBody() *InteractiveMessage_TextParameter {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *InteractiveMessage) GetFooter() *InteractiveMessage_TextParameter {
	if x != nil {
		return x.Footer
	}
	return nil
}

func (x *InteractiveMessage) GetAction() *InteractiveMessage_ActionWrapper {
	if x != nil {
		return x.Action
	}
	return nil
}

type LocationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Latitude  int64  `protobuf:"varint,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude int64  `protobuf:"varint,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LocationMessage) Reset() {
	*x = LocationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationMessage) ProtoMessage() {}

func (x *LocationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationMessage.ProtoReflect.Descriptor instead.
func (*LocationMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *LocationMessage) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *LocationMessage) GetLatitude() int64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LocationMessage) GetLongitude() int64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LocationMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SystemMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *SystemMessage) Reset() {
	*x = SystemMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMessage) ProtoMessage() {}

func (x *SystemMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMessage.ProtoReflect.Descriptor instead.
func (*SystemMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *SystemMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type StickerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Link     string    `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	Provider *Provider `protobuf:"bytes,8,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *StickerMessage) Reset() {
	*x = StickerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StickerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StickerMessage) ProtoMessage() {}

func (x *StickerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StickerMessage.ProtoReflect.Descriptor instead.
func (*StickerMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *StickerMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StickerMessage) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *StickerMessage) GetProvider() *Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type MessageWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *MessageWrapper) Reset() {
	*x = MessageWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWrapper) ProtoMessage() {}

func (x *MessageWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWrapper.ProtoReflect.Descriptor instead.
func (*MessageWrapper) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *MessageWrapper) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type Messagemeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To   string      `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Type MessageType `protobuf:"varint,2,opt,name=type,proto3,enum=meta.MessageType" json:"type,omitempty"`
}

func (x *Messagemeta) Reset() {
	*x = Messagemeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Messagemeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Messagemeta) ProtoMessage() {}

func (x *Messagemeta) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Messagemeta.ProtoReflect.Descriptor instead.
func (*Messagemeta) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *Messagemeta) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Messagemeta) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_unknown
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From          string                `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To            string                `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Context       *Context              `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
	Type          MessageType           `protobuf:"varint,5,opt,name=type,proto3,enum=meta.MessageType" json:"type,omitempty"`
	Timestamp     int64                 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Errors        []*Error              `protobuf:"bytes,7,rep,name=errors,proto3" json:"errors,omitempty"`
	Text          *TextMessage          `protobuf:"bytes,8,opt,name=text,proto3" json:"text,omitempty"`
	Image         *ImageMessage         `protobuf:"bytes,9,opt,name=image,proto3" json:"image,omitempty"`
	Audio         *AudioMessage         `protobuf:"bytes,10,opt,name=audio,proto3" json:"audio,omitempty"`
	Video         *VideoMessage         `protobuf:"bytes,11,opt,name=video,proto3" json:"video,omitempty"`
	Voice         *VoiceMessage         `protobuf:"bytes,12,opt,name=voice,proto3" json:"voice,omitempty"`
	Document      *DocumentMessage      `protobuf:"bytes,13,opt,name=document,proto3" json:"document,omitempty"`
	Location      *LocationMessage      `protobuf:"bytes,14,opt,name=location,proto3" json:"location,omitempty"`
	System        *SystemMessage        `protobuf:"bytes,15,opt,name=system,proto3" json:"system,omitempty"`
	Sticker       *StickerMessage       `protobuf:"bytes,16,opt,name=sticker,proto3" json:"sticker,omitempty"`
	Template      *TemplateMessage      `protobuf:"bytes,17,opt,name=template,proto3" json:"template,omitempty"`
	Interactive   *InteractiveMessage   `protobuf:"bytes,18,opt,name=interactive,proto3" json:"interactive,omitempty"`
	RecipientType Message_RecipientType `protobuf:"varint,19,opt,name=recipient_type,json=recipientType,proto3,enum=whatsapp.Message_RecipientType" json:"recipient_type,omitempty"`
	PreviewUrl    bool                  `protobuf:"varint,20,opt,name=preview_url,json=previewUrl,proto3" json:"preview_url,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Message) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Message) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_unknown
}

func (x *Message) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Message) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *Message) GetText() *TextMessage {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *Message) GetImage() *ImageMessage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Message) GetAudio() *AudioMessage {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *Message) GetVideo() *VideoMessage {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *Message) GetVoice() *VoiceMessage {
	if x != nil {
		return x.Voice
	}
	return nil
}

func (x *Message) GetDocument() *DocumentMessage {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *Message) GetLocation() *LocationMessage {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Message) GetSystem() *SystemMessage {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Message) GetSticker() *StickerMessage {
	if x != nil {
		return x.Sticker
	}
	return nil
}

func (x *Message) GetTemplate() *TemplateMessage {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *Message) GetInteractive() *InteractiveMessage {
	if x != nil {
		return x.Interactive
	}
	return nil
}

func (x *Message) GetRecipientType() Message_RecipientType {
	if x != nil {
		return x.RecipientType
	}
	return Message_unknown
}

func (x *Message) GetPreviewUrl() bool {
	if x != nil {
		return x.PreviewUrl
	}
	return false
}

type TemplateMessage_Language struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy TemplateMessage_Language_Policy `protobuf:"varint,1,opt,name=policy,proto3,enum=whatsapp.TemplateMessage_Language_Policy" json:"policy,omitempty"`
	Code   TemplateMessage_Language_Code   `protobuf:"varint,2,opt,name=code,proto3,enum=whatsapp.TemplateMessage_Language_Code" json:"code,omitempty"`
}

func (x *TemplateMessage_Language) Reset() {
	*x = TemplateMessage_Language{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateMessage_Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateMessage_Language) ProtoMessage() {}

func (x *TemplateMessage_Language) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateMessage_Language.ProtoReflect.Descriptor instead.
func (*TemplateMessage_Language) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9, 0}
}

func (x *TemplateMessage_Language) GetPolicy() TemplateMessage_Language_Policy {
	if x != nil {
		return x.Policy
	}
	return TemplateMessage_Language_deterministic
}

func (x *TemplateMessage_Language) GetCode() TemplateMessage_Language_Code {
	if x != nil {
		return x.Code
	}
	return TemplateMessage_Language_en
}

type TemplateMessage_Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string                                  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Subtype    string                                  `protobuf:"bytes,2,opt,name=subtype,proto3" json:"subtype,omitempty"`
	Index      uint32                                  `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Parameters []*TemplateMessage_Component_Parameters `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *TemplateMessage_Component) Reset() {
	*x = TemplateMessage_Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateMessage_Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateMessage_Component) ProtoMessage() {}

func (x *TemplateMessage_Component) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateMessage_Component.ProtoReflect.Descriptor instead.
func (*TemplateMessage_Component) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9, 1}
}

func (x *TemplateMessage_Component) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TemplateMessage_Component) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *TemplateMessage_Component) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TemplateMessage_Component) GetParameters() []*TemplateMessage_Component_Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type TemplateMessage_Component_Parameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are assignable to Spec:
	//	*TemplateMessage_Component_Parameters_Text
	//	*TemplateMessage_Component_Parameters_Currency
	//	*TemplateMessage_Component_Parameters_DateTime
	//	*TemplateMessage_Component_Parameters_Image
	//	*TemplateMessage_Component_Parameters_Document
	//	*TemplateMessage_Component_Parameters_Video
	//	*TemplateMessage_Component_Parameters_Payload
	Spec isTemplateMessage_Component_Parameters_Spec `protobuf_oneof:"spec"`
}

func (x *TemplateMessage_Component_Parameters) Reset() {
	*x = TemplateMessage_Component_Parameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateMessage_Component_Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateMessage_Component_Parameters) ProtoMessage() {}

func (x *TemplateMessage_Component_Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateMessage_Component_Parameters.ProtoReflect.Descriptor instead.
func (*TemplateMessage_Component_Parameters) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9, 1, 0}
}

func (x *TemplateMessage_Component_Parameters) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (m *TemplateMessage_Component_Parameters) GetSpec() isTemplateMessage_Component_Parameters_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (x *TemplateMessage_Component_Parameters) GetText() string {
	if x, ok := x.GetSpec().(*TemplateMessage_Component_Parameters_Text); ok {
		return x.Text
	}
	return ""
}

func (x *TemplateMessage_Component_Parameters) GetCurrency() *TemplateMessage_Component_Parameters_CurrencyParameter {
	if x, ok := x.GetSpec().(*TemplateMessage_Component_Parameters_Currency); ok {
		return x.Currency
	}
	return nil
}

func (x *TemplateMessage_Component_Parameters) GetDateTime() *TemplateMessage_Component_Parameters_DateTimeParameter {
	if x, ok := x.GetSpec().(*TemplateMessage_Component_Parameters_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *TemplateMessage_Component_Parameters) GetImage() *MediaParameter {
	if x, ok := x.GetSpec().(*TemplateMessage_Component_Parameters_Image); ok {
		return x.Image
	}
	return nil
}

func (x *TemplateMessage_Component_Parameters) GetDocument() *MediaParameter {
	if x, ok := x.GetSpec().(*TemplateMessage_Component_Parameters_Document); ok {
		return x.Document
	}
	return nil
}

func (x *TemplateMessage_Component_Parameters) GetVideo() *MediaParameter {
	if x, ok := x.GetSpec().(*TemplateMessage_Component_Parameters_Video); ok {
		return x.Video
	}
	return nil
}

func (x *TemplateMessage_Component_Parameters) GetPayload() string {
	if x, ok := x.GetSpec().(*TemplateMessage_Component_Parameters_Payload); ok {
		return x.Payload
	}
	return ""
}

type isTemplateMessage_Component_Parameters_Spec interface {
	isTemplateMessage_Component_Parameters_Spec()
}

type TemplateMessage_Component_Parameters_Text struct {
	Text string `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

type TemplateMessage_Component_Parameters_Currency struct {
	Currency *TemplateMessage_Component_Parameters_CurrencyParameter `protobuf:"bytes,3,opt,name=currency,proto3,oneof"`
}

type TemplateMessage_Component_Parameters_DateTime struct {
	DateTime *TemplateMessage_Component_Parameters_DateTimeParameter `protobuf:"bytes,4,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type TemplateMessage_Component_Parameters_Image struct {
	Image *MediaParameter `protobuf:"bytes,5,opt,name=image,proto3,oneof"`
}

type TemplateMessage_Component_Parameters_Document struct {
	Document *MediaParameter `protobuf:"bytes,6,opt,name=document,proto3,oneof"`
}

type TemplateMessage_Component_Parameters_Video struct {
	Video *MediaParameter `protobuf:"bytes,7,opt,name=video,proto3,oneof"`
}

type TemplateMessage_Component_Parameters_Payload struct {
	Payload string `protobuf:"bytes,8,opt,name=payload,proto3,oneof"`
}

func (*TemplateMessage_Component_Parameters_Text) isTemplateMessage_Component_Parameters_Spec() {}

func (*TemplateMessage_Component_Parameters_Currency) isTemplateMessage_Component_Parameters_Spec() {}

func (*TemplateMessage_Component_Parameters_DateTime) isTemplateMessage_Component_Parameters_Spec() {}

func (*TemplateMessage_Component_Parameters_Image) isTemplateMessage_Component_Parameters_Spec() {}

func (*TemplateMessage_Component_Parameters_Document) isTemplateMessage_Component_Parameters_Spec() {}

func (*TemplateMessage_Component_Parameters_Video) isTemplateMessage_Component_Parameters_Spec() {}

func (*TemplateMessage_Component_Parameters_Payload) isTemplateMessage_Component_Parameters_Spec() {}

type TemplateMessage_Component_Parameters_CurrencyParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FallbackValue string `protobuf:"bytes,1,opt,name=fallback_value,json=fallbackValue,proto3" json:"fallback_value,omitempty"`
	Code          string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Amount_1000   uint32 `protobuf:"varint,3,opt,name=amount_1000,json=amount1000,proto3" json:"amount_1000,omitempty"`
}

func (x *TemplateMessage_Component_Parameters_CurrencyParameter) Reset() {
	*x = TemplateMessage_Component_Parameters_CurrencyParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateMessage_Component_Parameters_CurrencyParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateMessage_Component_Parameters_CurrencyParameter) ProtoMessage() {}

func (x *TemplateMessage_Component_Parameters_CurrencyParameter) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateMessage_Component_Parameters_CurrencyParameter.ProtoReflect.Descriptor instead.
func (*TemplateMessage_Component_Parameters_CurrencyParameter) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9, 1, 0, 0}
}

func (x *TemplateMessage_Component_Parameters_CurrencyParameter) GetFallbackValue() string {
	if x != nil {
		return x.FallbackValue
	}
	return ""
}

func (x *TemplateMessage_Component_Parameters_CurrencyParameter) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TemplateMessage_Component_Parameters_CurrencyParameter) GetAmount_1000() uint32 {
	if x != nil {
		return x.Amount_1000
	}
	return 0
}

type TemplateMessage_Component_Parameters_DateTimeParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FallbackValue string                                        `protobuf:"bytes,1,opt,name=fallback_value,json=fallbackValue,proto3" json:"fallback_value,omitempty"`
	DayOfWeek     uint32                                        `protobuf:"varint,2,opt,name=day_of_week,json=dayOfWeek,proto3" json:"day_of_week,omitempty"`
	DayOfMonth    uint32                                        `protobuf:"varint,3,opt,name=day_of_month,json=dayOfMonth,proto3" json:"day_of_month,omitempty"`
	Year          uint32                                        `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
	Month         uint32                                        `protobuf:"varint,5,opt,name=month,proto3" json:"month,omitempty"`
	Hour          uint32                                        `protobuf:"varint,6,opt,name=hour,proto3" json:"hour,omitempty"`
	Minute        uint32                                        `protobuf:"varint,7,opt,name=minute,proto3" json:"minute,omitempty"`
	Timestamp     uint64                                        `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Calender      TemplateMessage_Component_Parameters_Calender `protobuf:"varint,9,opt,name=calender,proto3,enum=whatsapp.TemplateMessage_Component_Parameters_Calender" json:"calender,omitempty"`
}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) Reset() {
	*x = TemplateMessage_Component_Parameters_DateTimeParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateMessage_Component_Parameters_DateTimeParameter) ProtoMessage() {}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateMessage_Component_Parameters_DateTimeParameter.ProtoReflect.Descriptor instead.
func (*TemplateMessage_Component_Parameters_DateTimeParameter) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9, 1, 0, 1}
}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) GetFallbackValue() string {
	if x != nil {
		return x.FallbackValue
	}
	return ""
}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) GetDayOfWeek() uint32 {
	if x != nil {
		return x.DayOfWeek
	}
	return 0
}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) GetDayOfMonth() uint32 {
	if x != nil {
		return x.DayOfMonth
	}
	return 0
}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) GetMonth() uint32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) GetHour() uint32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) GetMinute() uint32 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TemplateMessage_Component_Parameters_DateTimeParameter) GetCalender() TemplateMessage_Component_Parameters_Calender {
	if x != nil {
		return x.Calender
	}
	return TemplateMessage_Component_Parameters_GREGORIAN
}

type InteractiveMessage_HeaderParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Text     string          `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Image    *MediaParameter `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Document *MediaParameter `protobuf:"bytes,4,opt,name=document,proto3" json:"document,omitempty"`
	Video    *MediaParameter `protobuf:"bytes,5,opt,name=video,proto3" json:"video,omitempty"`
}

func (x *InteractiveMessage_HeaderParameter) Reset() {
	*x = InteractiveMessage_HeaderParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractiveMessage_HeaderParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractiveMessage_HeaderParameter) ProtoMessage() {}

func (x *InteractiveMessage_HeaderParameter) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractiveMessage_HeaderParameter.ProtoReflect.Descriptor instead.
func (*InteractiveMessage_HeaderParameter) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10, 0}
}

func (x *InteractiveMessage_HeaderParameter) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InteractiveMessage_HeaderParameter) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *InteractiveMessage_HeaderParameter) GetImage() *MediaParameter {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *InteractiveMessage_HeaderParameter) GetDocument() *MediaParameter {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *InteractiveMessage_HeaderParameter) GetVideo() *MediaParameter {
	if x != nil {
		return x.Video
	}
	return nil
}

type InteractiveMessage_TextParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *InteractiveMessage_TextParameter) Reset() {
	*x = InteractiveMessage_TextParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractiveMessage_TextParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractiveMessage_TextParameter) ProtoMessage() {}

func (x *InteractiveMessage_TextParameter) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractiveMessage_TextParameter.ProtoReflect.Descriptor instead.
func (*InteractiveMessage_TextParameter) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10, 1}
}

func (x *InteractiveMessage_TextParameter) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type InteractiveMessage_Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string                                   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Rows  []*InteractiveMessage_Section_SectionRow `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *InteractiveMessage_Section) Reset() {
	*x = InteractiveMessage_Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractiveMessage_Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractiveMessage_Section) ProtoMessage() {}

func (x *InteractiveMessage_Section) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractiveMessage_Section.ProtoReflect.Descriptor instead.
func (*InteractiveMessage_Section) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10, 2}
}

func (x *InteractiveMessage_Section) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InteractiveMessage_Section) GetRows() []*InteractiveMessage_Section_SectionRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

type InteractiveMessage_ButtonsAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string                                               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // only supported type is reply
	Reply *InteractiveMessage_ButtonsAction_ButtonsActionReply `protobuf:"bytes,2,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *InteractiveMessage_ButtonsAction) Reset() {
	*x = InteractiveMessage_ButtonsAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractiveMessage_ButtonsAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractiveMessage_ButtonsAction) ProtoMessage() {}

func (x *InteractiveMessage_ButtonsAction) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractiveMessage_ButtonsAction.ProtoReflect.Descriptor instead.
func (*InteractiveMessage_ButtonsAction) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10, 3}
}

func (x *InteractiveMessage_ButtonsAction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InteractiveMessage_ButtonsAction) GetReply() *InteractiveMessage_ButtonsAction_ButtonsActionReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type InteractiveMessage_ActionWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Button   string                              `protobuf:"bytes,1,opt,name=button,proto3" json:"button,omitempty"`     // only for list interactive message
	Buttons  []*InteractiveMessage_ButtonsAction `protobuf:"bytes,2,rep,name=buttons,proto3" json:"buttons,omitempty"`   // only for button interactive message
	Sections []*InteractiveMessage_Section       `protobuf:"bytes,3,rep,name=sections,proto3" json:"sections,omitempty"` // only for list interactive message
}

func (x *InteractiveMessage_ActionWrapper) Reset() {
	*x = InteractiveMessage_ActionWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractiveMessage_ActionWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractiveMessage_ActionWrapper) ProtoMessage() {}

func (x *InteractiveMessage_ActionWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractiveMessage_ActionWrapper.ProtoReflect.Descriptor instead.
func (*InteractiveMessage_ActionWrapper) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10, 4}
}

func (x *InteractiveMessage_ActionWrapper) GetButton() string {
	if x != nil {
		return x.Button
	}
	return ""
}

func (x *InteractiveMessage_ActionWrapper) GetButtons() []*InteractiveMessage_ButtonsAction {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (x *InteractiveMessage_ActionWrapper) GetSections() []*InteractiveMessage_Section {
	if x != nil {
		return x.Sections
	}
	return nil
}

type InteractiveMessage_Section_SectionRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *InteractiveMessage_Section_SectionRow) Reset() {
	*x = InteractiveMessage_Section_SectionRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractiveMessage_Section_SectionRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractiveMessage_Section_SectionRow) ProtoMessage() {}

func (x *InteractiveMessage_Section_SectionRow) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractiveMessage_Section_SectionRow.ProtoReflect.Descriptor instead.
func (*InteractiveMessage_Section_SectionRow) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10, 2, 0}
}

func (x *InteractiveMessage_Section_SectionRow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InteractiveMessage_Section_SectionRow) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InteractiveMessage_Section_SectionRow) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type InteractiveMessage_ButtonsAction_ButtonsActionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *InteractiveMessage_ButtonsAction_ButtonsActionReply) Reset() {
	*x = InteractiveMessage_ButtonsAction_ButtonsActionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractiveMessage_ButtonsAction_ButtonsActionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractiveMessage_ButtonsAction_ButtonsActionReply) ProtoMessage() {}

func (x *InteractiveMessage_ButtonsAction_ButtonsActionReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractiveMessage_ButtonsAction_ButtonsActionReply.ProtoReflect.Descriptor instead.
func (*InteractiveMessage_ButtonsAction_ButtonsActionReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10, 3, 0}
}

func (x *InteractiveMessage_ButtonsAction_ButtonsActionReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InteractiveMessage_ButtonsAction_ButtonsActionReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x6c, 0x79,
	0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x65, 0x64, 0x22, 0x1e, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0xce, 0x01, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x0a, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0xb4, 0x01, 0x0a, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x0a, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xce, 0x01, 0x0a, 0x0c, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x0a, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32,
	0x35, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x0a, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x22, 0xed, 0x01, 0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x0a, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x22, 0x5f, 0x0a, 0x0e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x0a, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xda, 0x0c, 0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x68, 0x61,
	0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xd3, 0x01,
	0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x77, 0x68, 0x61,
	0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70,
	0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x1b,
	0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x11, 0x0a, 0x0d, 0x64, 0x65, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x10, 0x00, 0x22, 0x16, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x65, 0x6e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x64,
	0x65, 0x10, 0x01, 0x1a, 0xb9, 0x09, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x23, 0xfa, 0x42, 0x20, 0x72, 0x1e, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x06, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17,
	0x72, 0x15, 0x52, 0x0b, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0xd0, 0x01, 0x01, 0x52, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x77, 0x68, 0x61,
	0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xd6, 0x07, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x4c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x38, 0xfa, 0x42, 0x35, 0x72, 0x33, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x5e, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x5f, 0x0a, 0x09, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x08,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x1a, 0x6f, 0x0a, 0x11, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x31, 0x30, 0x30,
	0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x31,
	0x30, 0x30, 0x30, 0x1a, 0xc5, 0x02, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b,
	0x12, 0x20, 0x0a, 0x0c, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x75, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x53, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x61, 0x70, 0x70, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x08, 0x43,
	0x61, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x52, 0x45, 0x47, 0x4f,
	0x52, 0x49, 0x41, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4f, 0x4c, 0x41, 0x52, 0x5f,
	0x48, 0x49, 0x4a, 0x52, 0x49, 0x10, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22,
	0xe0, 0x09, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x44, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x42, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xf4, 0x01,
	0x0a, 0x0f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x23, 0xfa, 0x42, 0x20, 0x72, 0x1e, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x52, 0x05, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2e,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x34,
	0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x1a, 0x23, 0x0a, 0x0d, 0x54, 0x65, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0xba, 0x01, 0x0a, 0x07, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x1a, 0x54, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x87, 0x02, 0x0a, 0x0d, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x0a, 0x05, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x05, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x1a,
	0x7f, 0x0a, 0x12, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x80, 0x02, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x4d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x37, 0xfa, 0x42, 0x34, 0x72, 0x32, 0x10, 0x01, 0x18, 0x14, 0x32, 0x2c, 0x5e, 0x5b, 0x5e,
	0x5c, 0x78, 0x7b, 0x31, 0x46, 0x36, 0x30, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x31, 0x46, 0x36,
	0x46, 0x46, 0x7d, 0x7c, 0x5b, 0x5c, 0x78, 0x7b, 0x32, 0x36, 0x30, 0x30, 0x7d, 0x2d, 0x5c, 0x78,
	0x7b, 0x32, 0x36, 0x46, 0x46, 0x7d, 0x5d, 0x2a, 0x24, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x1a, 0xaf, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x07, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73,
	0x12, 0x40, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x79, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a,
	0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x22, 0x64, 0x0a, 0x0e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x68, 0x61,
	0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x0b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0xc8, 0x07, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x2f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xfa, 0x42, 0x1c,
	0x72, 0x1a, 0x32, 0x18, 0x5e, 0x5c, 0x2b, 0x28, 0x3f, 0x3a, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29,
	0x7b, 0x36, 0x2c, 0x31, 0x34, 0x7d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x24, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x25, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x27, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x2c, 0x0a, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61,
	0x70, 0x70, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x32, 0x0a,
	0x07, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72,
	0x6c, 0x22, 0x37, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x02, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_messages_proto_goTypes = []interface{}{
	(TemplateMessage_Language_Policy)(0),               // 0: whatsapp.TemplateMessage.Language.Policy
	(TemplateMessage_Language_Code)(0),                 // 1: whatsapp.TemplateMessage.Language.Code
	(TemplateMessage_Component_Parameters_Calender)(0), // 2: whatsapp.TemplateMessage.Component.Parameters.Calender
	(Message_RecipientType)(0),                         // 3: whatsapp.Message.RecipientType
	(*Context)(nil),                                    // 4: whatsapp.Context
	(*Provider)(nil),                                   // 5: whatsapp.Provider
	(*TextMessage)(nil),                                // 6: whatsapp.TextMessage
	(*ImageMessage)(nil),                               // 7: whatsapp.ImageMessage
	(*AudioMessage)(nil),                               // 8: whatsapp.AudioMessage
	(*VideoMessage)(nil),                               // 9: whatsapp.VideoMessage
	(*VoiceMessage)(nil),                               // 10: whatsapp.VoiceMessage
	(*DocumentMessage)(nil),                            // 11: whatsapp.DocumentMessage
	(*MediaParameter)(nil),                             // 12: whatsapp.MediaParameter
	(*TemplateMessage)(nil),                            // 13: whatsapp.TemplateMessage
	(*InteractiveMessage)(nil),                         // 14: whatsapp.InteractiveMessage
	(*LocationMessage)(nil),                            // 15: whatsapp.LocationMessage
	(*SystemMessage)(nil),                              // 16: whatsapp.SystemMessage
	(*StickerMessage)(nil),                             // 17: whatsapp.StickerMessage
	(*MessageWrapper)(nil),                             // 18: whatsapp.MessageWrapper
	(*Messagemeta)(nil),                                // 19: whatsapp.Messagemeta
	(*Message)(nil),                                    // 20: whatsapp.Message
	(*TemplateMessage_Language)(nil),                   // 21: whatsapp.TemplateMessage.Language
	(*TemplateMessage_Component)(nil),                  // 22: whatsapp.TemplateMessage.Component
	(*TemplateMessage_Component_Parameters)(nil),       // 23: whatsapp.TemplateMessage.Component.Parameters
	(*TemplateMessage_Component_Parameters_CurrencyParameter)(nil), // 24: whatsapp.TemplateMessage.Component.Parameters.CurrencyParameter
	(*TemplateMessage_Component_Parameters_DateTimeParameter)(nil), // 25: whatsapp.TemplateMessage.Component.Parameters.DateTimeParameter
	(*InteractiveMessage_HeaderParameter)(nil),                     // 26: whatsapp.InteractiveMessage.HeaderParameter
	(*InteractiveMessage_TextParameter)(nil),                       // 27: whatsapp.InteractiveMessage.TextParameter
	(*InteractiveMessage_Section)(nil),                             // 28: whatsapp.InteractiveMessage.Section
	(*InteractiveMessage_ButtonsAction)(nil),                       // 29: whatsapp.InteractiveMessage.ButtonsAction
	(*InteractiveMessage_ActionWrapper)(nil),                       // 30: whatsapp.InteractiveMessage.ActionWrapper
	(*InteractiveMessage_Section_SectionRow)(nil),                  // 31: whatsapp.InteractiveMessage.Section.SectionRow
	(*InteractiveMessage_ButtonsAction_ButtonsActionReply)(nil),    // 32: whatsapp.InteractiveMessage.ButtonsAction.ButtonsActionReply
	(MessageType)(0), // 33: meta.MessageType
	(*Error)(nil),    // 34: whatsapp.Error
}
var file_messages_proto_depIdxs = []int32{
	5,  // 0: whatsapp.ImageMessage.provider:type_name -> whatsapp.Provider
	5,  // 1: whatsapp.AudioMessage.provider:type_name -> whatsapp.Provider
	5,  // 2: whatsapp.VideoMessage.provider:type_name -> whatsapp.Provider
	5,  // 3: whatsapp.DocumentMessage.provider:type_name -> whatsapp.Provider
	21, // 4: whatsapp.TemplateMessage.language:type_name -> whatsapp.TemplateMessage.Language
	22, // 5: whatsapp.TemplateMessage.components:type_name -> whatsapp.TemplateMessage.Component
	26, // 6: whatsapp.InteractiveMessage.header:type_name -> whatsapp.InteractiveMessage.HeaderParameter
	27, // 7: whatsapp.InteractiveMessage.body:type_name -> whatsapp.InteractiveMessage.TextParameter
	27, // 8: whatsapp.InteractiveMessage.footer:type_name -> whatsapp.InteractiveMessage.TextParameter
	30, // 9: whatsapp.InteractiveMessage.action:type_name -> whatsapp.InteractiveMessage.ActionWrapper
	5,  // 10: whatsapp.StickerMessage.provider:type_name -> whatsapp.Provider
	20, // 11: whatsapp.MessageWrapper.messages:type_name -> whatsapp.Message
	33, // 12: whatsapp.Messagemeta.type:type_name -> meta.MessageType
	4,  // 13: whatsapp.Message.context:type_name -> whatsapp.Context
	33, // 14: whatsapp.Message.type:type_name -> meta.MessageType
	34, // 15: whatsapp.Message.errors:type_name -> whatsapp.Error
	6,  // 16: whatsapp.Message.text:type_name -> whatsapp.TextMessage
	7,  // 17: whatsapp.Message.image:type_name -> whatsapp.ImageMessage
	8,  // 18: whatsapp.Message.audio:type_name -> whatsapp.AudioMessage
	9,  // 19: whatsapp.Message.video:type_name -> whatsapp.VideoMessage
	10, // 20: whatsapp.Message.voice:type_name -> whatsapp.VoiceMessage
	11, // 21: whatsapp.Message.document:type_name -> whatsapp.DocumentMessage
	15, // 22: whatsapp.Message.location:type_name -> whatsapp.LocationMessage
	16, // 23: whatsapp.Message.system:type_name -> whatsapp.SystemMessage
	17, // 24: whatsapp.Message.sticker:type_name -> whatsapp.StickerMessage
	13, // 25: whatsapp.Message.template:type_name -> whatsapp.TemplateMessage
	14, // 26: whatsapp.Message.interactive:type_name -> whatsapp.InteractiveMessage
	3,  // 27: whatsapp.Message.recipient_type:type_name -> whatsapp.Message.RecipientType
	0,  // 28: whatsapp.TemplateMessage.Language.policy:type_name -> whatsapp.TemplateMessage.Language.Policy
	1,  // 29: whatsapp.TemplateMessage.Language.code:type_name -> whatsapp.TemplateMessage.Language.Code
	23, // 30: whatsapp.TemplateMessage.Component.parameters:type_name -> whatsapp.TemplateMessage.Component.Parameters
	24, // 31: whatsapp.TemplateMessage.Component.Parameters.currency:type_name -> whatsapp.TemplateMessage.Component.Parameters.CurrencyParameter
	25, // 32: whatsapp.TemplateMessage.Component.Parameters.date_time:type_name -> whatsapp.TemplateMessage.Component.Parameters.DateTimeParameter
	12, // 33: whatsapp.TemplateMessage.Component.Parameters.image:type_name -> whatsapp.MediaParameter
	12, // 34: whatsapp.TemplateMessage.Component.Parameters.document:type_name -> whatsapp.MediaParameter
	12, // 35: whatsapp.TemplateMessage.Component.Parameters.video:type_name -> whatsapp.MediaParameter
	2,  // 36: whatsapp.TemplateMessage.Component.Parameters.DateTimeParameter.calender:type_name -> whatsapp.TemplateMessage.Component.Parameters.Calender
	12, // 37: whatsapp.InteractiveMessage.HeaderParameter.image:type_name -> whatsapp.MediaParameter
	12, // 38: whatsapp.InteractiveMessage.HeaderParameter.document:type_name -> whatsapp.MediaParameter
	12, // 39: whatsapp.InteractiveMessage.HeaderParameter.video:type_name -> whatsapp.MediaParameter
	31, // 40: whatsapp.InteractiveMessage.Section.rows:type_name -> whatsapp.InteractiveMessage.Section.SectionRow
	32, // 41: whatsapp.InteractiveMessage.ButtonsAction.reply:type_name -> whatsapp.InteractiveMessage.ButtonsAction.ButtonsActionReply
	29, // 42: whatsapp.InteractiveMessage.ActionWrapper.buttons:type_name -> whatsapp.InteractiveMessage.ButtonsAction
	28, // 43: whatsapp.InteractiveMessage.ActionWrapper.sections:type_name -> whatsapp.InteractiveMessage.Section
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	file_meta_proto_init()
	file_general_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractiveMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StickerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Messagemeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateMessage_Language); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateMessage_Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateMessage_Component_Parameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateMessage_Component_Parameters_CurrencyParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateMessage_Component_Parameters_DateTimeParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractiveMessage_HeaderParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractiveMessage_TextParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractiveMessage_Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractiveMessage_ButtonsAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractiveMessage_ActionWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractiveMessage_Section_SectionRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractiveMessage_ButtonsAction_ButtonsActionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*TemplateMessage_Component_Parameters_Text)(nil),
		(*TemplateMessage_Component_Parameters_Currency)(nil),
		(*TemplateMessage_Component_Parameters_DateTime)(nil),
		(*TemplateMessage_Component_Parameters_Image)(nil),
		(*TemplateMessage_Component_Parameters_Document)(nil),
		(*TemplateMessage_Component_Parameters_Video)(nil),
		(*TemplateMessage_Component_Parameters_Payload)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
